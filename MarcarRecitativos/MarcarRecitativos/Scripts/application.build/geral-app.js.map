{"version":3,"sources":["geral.application.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"geral-app.js","sourcesContent":["Array.prototype.Sum = function (attr) {\r\n  var numbers = this;\r\n  var result = 0;\r\n\r\n  for (var i = 0; i < numbers.length; i++) {\r\n    result += numbers[i][attr];    \r\n  }\r\n\r\n  return result;\r\n};\r\n\r\nArray.prototype.FindIndex = function(search, attr) {\r\n  var thisArray = this;\r\n  var childs = attr.split('.')\r\n  var objeto = null;\r\n\r\n  // verifica se não é um array vazio\r\n  if(!this.length) return false;\r\n\r\n  // verifica se existe atributo no array\r\n  var firstObject = this[0];\r\n\r\n  // monta a string no qual faremos um evaluate\r\n  var mountString = 'firstObject';\r\n\r\n  for (var j = 0; j < childs.length; j++) {\r\n\r\n    mountString += '.' + childs[j]\r\n\r\n    objeto = eval(mountString);\r\n\r\n    if(objeto === undefined) return false;\r\n  }\r\n\r\n  // caso tenha chegado até aqui, significa que o caminho até o objeto existe\r\n  // verifica se o objeto procurado existe no array\r\n  for (var i = 0; i < thisArray.length; i++) {\r\n    var element = thisArray[i];\r\n\r\n    if(eval('element.' + attr) == search) return i;\r\n  }\r\n\r\n  return false;\r\n};\r\n//# sourceMappingURL=geral.application.js.map\r\n"]}